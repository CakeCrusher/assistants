name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Start Docker containers
      run: |
        docker-compose -f docker/docker-compose.yml up -d
        while ! docker exec -it pg pg_isready -U postgres; do sleep 1; done
        docker exec -it pg psql -U postgres -c "CREATE DATABASE mydatabase;" > /dev/null 2>&1 || echo "Database already exists"
        docker exec -i pg psql -U postgres -d mydatabase < assistants-core/src/migrations.sql > /dev/null 2>&1 || echo "Migrations already applied"

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:secret@localhost:5432/mydatabase
        REDIS_URL: redis://127.0.0.1/
        S3_ENDPOINT: http://localhost:9000
        S3_ACCESS_KEY: minioadmin
        S3_SECRET_KEY: minioadmin
        S3_BUCKET_NAME: mybucket
        ANTHROPIC_KEY: ${{ secrets.ANTHROPIC_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: RUST_TEST_THREADS=1 cargo test --features ci
